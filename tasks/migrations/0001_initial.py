# Generated by Django 4.2.14 on 2024-08-06 10:56

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import tasks.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "region",
                    models.CharField(
                        default="Севастополь", max_length=128, verbose_name="Регион"
                    ),
                ),
                (
                    "settlement",
                    models.CharField(
                        default="Севастополь",
                        help_text="Любимовка, Верхнесадовое",
                        max_length=128,
                        verbose_name="Населенный пункт",
                    ),
                ),
                (
                    "plan_structure",
                    models.CharField(
                        blank=True,
                        help_text="Рыбак-7",
                        max_length=128,
                        null=True,
                        verbose_name="ТСН СНТ, СТ",
                    ),
                ),
                (
                    "street",
                    models.CharField(
                        blank=True,
                        help_text="Полное название с указанием типа (улица/проспект/проезд/бульвар/шоссе/переулок/тупик)",
                        max_length=128,
                        null=True,
                        verbose_name="Улица",
                    ),
                ),
                (
                    "house",
                    models.CharField(
                        help_text="Можно с буквой (русской)",
                        max_length=16,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d+[а-яА-Я]?$", message="Неверный формат дома"
                            )
                        ],
                        verbose_name="Дом",
                    ),
                ),
                (
                    "block",
                    models.PositiveSmallIntegerField(
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Корпус",
                    ),
                ),
                ("floor", models.SmallIntegerField(null=True, verbose_name="Этаж")),
                (
                    "apartment",
                    models.PositiveSmallIntegerField(
                        null=True,
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Кабинет",
                    ),
                ),
            ],
            options={
                "db_table": "gpon_addresses",
            },
        ),
        migrations.CreateModel(
            name="AttachedFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        max_length=254, upload_to=tasks.models.upload_directory_path
                    ),
                ),
            ],
            options={
                "db_table": "attached_files",
            },
        ),
        migrations.CreateModel(
            name="Engineer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=128)),
                ("second_name", models.CharField(max_length=128)),
                ("position", models.CharField(max_length=256)),
                (
                    "user",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "engineers",
            },
        ),
        migrations.CreateModel(
            name="ObjectGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128)),
            ],
            options={
                "db_table": "object_groups",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag_name", models.CharField(max_length=64)),
            ],
            options={
                "db_table": "tags",
            },
        ),
        migrations.CreateModel(
            name="UserObjectGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "permission",
                    models.CharField(
                        choices=[("R", "Чтение"), ("W", "Запись")], max_length=10
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tasks.objectgroup",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "users_objects_groups_m2m",
            },
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("CRITICAL", "Критический"),
                            ("HIGH", "Высокий"),
                            ("MEDIUM", "Средний"),
                            ("LOW", "Низкий"),
                        ],
                        max_length=10,
                    ),
                ),
                ("is_done", models.BooleanField()),
                ("completion_time", models.DateTimeField()),
                ("header", models.CharField(max_length=128)),
                ("text", models.TextField()),
                (
                    "engineers",
                    models.ManyToManyField(
                        db_table="tasks_engineers_m2m",
                        related_name="tasks",
                        to="tasks.engineer",
                    ),
                ),
                (
                    "files",
                    models.ManyToManyField(
                        db_table="tasks_files_m2m",
                        related_name="tasks",
                        to="tasks.attachedfile",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        db_table="tasks_tags_m2m", related_name="tasks", to="tasks.tag"
                    ),
                ),
            ],
            options={
                "db_table": "object_tasks",
            },
        ),
        migrations.AddField(
            model_name="objectgroup",
            name="users",
            field=models.ManyToManyField(
                related_name="object_groups",
                through="tasks.UserObjectGroup",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Object",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("CRITICAL", "Критический"),
                            ("HIGH", "Высокий"),
                            ("MEDIUM", "Средний"),
                            ("LOW", "Низкий"),
                        ],
                        max_length=10,
                    ),
                ),
                ("name", models.CharField(max_length=64)),
                ("description", models.TextField()),
                (
                    "address",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tasks.address"
                    ),
                ),
                (
                    "files",
                    models.ManyToManyField(
                        db_table="objects_files_m2m",
                        related_name="objects",
                        to="tasks.attachedfile",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        db_table="objects_groups_m2m",
                        related_name="objects",
                        to="tasks.objectgroup",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        db_table="objects_tags_m2m",
                        related_name="objects",
                        to="tasks.tag",
                    ),
                ),
                (
                    "tasks",
                    models.ManyToManyField(
                        db_table="objects_tasks_m2m",
                        related_name="objects",
                        to="tasks.task",
                    ),
                ),
            ],
            options={
                "db_table": "objects",
            },
        ),
    ]
